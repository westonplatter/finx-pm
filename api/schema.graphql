schema {
	query: Query,
	mutation: Mutation
}

type Account {
  accountId: String
}

type Group {
	id: ID!,
	name: String!
}

type GroupTrade {
	id: ID!,
	trade: Trade!,
	group: Group!
}

type Trade {
	id: ID!,
  accountId: String,
  assetCategory: String,
  buySell: String
  closePrice: Float,
  conId: String,
  dateTime: String,
  description: String,
  expiry: String,
  fifoPnlRealized: Float,
	fxPnl: Float,
  ibCommission: Float,
  ibExecId: String,
  ibOrderId: String,
  multiplier: Int,
  netCash: Float,
  notes: String,
  mtmPnl: Float,
  openCloseIndicator: String,
	proceeds: Float,
  putCall: String,
  quantity: Float,
  securityID: String,
	securityIDType: String,
  strike: String,
  symbol: String!,
  tradeDate: String,
  tradeId: String,
  tradePrice: Float,
  transactionId: String,
  transactionType: String,
  underlyingConId: String,
  underlyingSecurityId: String,
  underlyingSymbol: String,
}

type TradeResult {
	success: Boolean!,
	errors: [String],
	trade: Trade
}

type TradesResult {
	success: Boolean!,
	errors: [String!],
	trades: [Trade!]!,
  totalCount: Int
}

type AccountsResult {
  success: Boolean,
  errors: [String!],
  accounts: [Account!]!,
  count: Int
}

type GroupResult {
	success: Boolean!,
	errors: [String!],
	group: Group!
}

type GroupsResult {
	success: Boolean!,
	errors: [String!],
	groups: [Group!]
}

type Query  {
	trades(symbols: [String], underlyingSymbols: [String], accountIds: [String], openClose: String, pageSize: Int, pageIndex: Int): TradesResult!,
	trade(tradeId: ID!): TradeResult,
  accounts: AccountsResult,
	groups: GroupsResult,
}

type deleteTradeResult {
	success: Boolean!,
	errors: [String!],
}

type Mutation {
	createTradeSimple(symbol: String!): TradeResult!
	createTrade(
    accountId: String,
    assetCategory: String,
    buySell: String
    closePrice: Float,
    conId: String,
    dateTime: String,
    description: String,
    expiry: String,
    fifoPnlRealized: Float,
		fxPnl: Float,
    ibCommission: Float,
    ibExecId: String,
    ibOrderId: String,
    mtmPnl: Float,
    multiplier: Int,
    netCash: Float,
    openCloseIndicator: String,
    proceeds: Float,
    putCall: String,
    quantity: Float,
		symbol: String,
    strike: String,
    tradeDate: String,
		tradeId: String,
    tradePrice: Float,
    transactionId: String,
		underlyingSymbol: String,
    notes: String,
	): TradeResult

	deleteTrade(tradeId: ID!): deleteTradeResult!
	createGroup(name: String!): GroupResult!,
}
